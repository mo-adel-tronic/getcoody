[
    [
        {
            "type": "h2",
            "content": "مفهوم تطبيقات الهواتف الذكية"
        },
        {
            "type": "p",
            "content": "تُعرف تطبيقات الهواتف الذكية بأنها برمجيات مصممة خصيصًا للعمل على الأجهزة النقالة، يتم تحميلها من المتاجر الإلكترونية أو تكون محمّلة مسبقًا على الأجهزة، وتهدف إلى تقديم خدمات متنوعة للمستخدمين، سواء كانت تعليمية أو ترفيهية أو خدمية، عبر واجهات تصميمية تفاعلية تسهل الاستخدام في أي وقت ومكان، وقد تكون هذه التطبيقات مجانية أو مقابل رسوم مالية."
        },
        {
            "type": "h3",
            "content": "مراحل إنتاج تطبيقات الهواتف الذكية:"
        },
        {
            "type": "h4",
            "content": "المرحلة الأولى: مرحلة التصور والفكرة وتتضمن: -"
        },
        {
            "type": "ul",
            "content": [
                "تحديد الفكرة الأساسية للتطبيق بناءً على احتياجات المستخدمين.",
                "دراسة جدوى الفكرة ومدى قابليتها للتنفيذ.",
                "البحث عن التطبيقات المشابهة لتقييم جدوى المشروع."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة الثانية: مرحلة التعريف والتخطيط وتتضمن:-"
        },
        {
            "type": "ul",
            "content": [
                "تحديد المستخدمين المستهدفين.",
                "وضع المتطلبات الأساسية والوظائف المتوقع تقديمها.",
                "توثيق نطاق العمل والجدول الزمني للتنفيذ."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة الثالثة: مرحلة التصميم وتتضمن: -"
        },
        {
            "type": "ul",
            "content": [
                "إنشاء التصاميم الأولية لواجهة المستخدم وتجربة الاستخدام.",
                "إعداد النماذج التفاعلية التي توضح تدفق التطبيق.",
                "تحديد المنصات المستهدفة (Android أو IOS) أو كليهما."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة الرابعة: مرحلة التطوير وتتضمن: -"
        },
        {
            "type":"ul",
            "content": [
                "كتابة الكود البرمجي وبناء البنية الأساسية للتطبيق.",
                "دمج الوظائف الأساسية وواجهة المستخدم معًا.",
                "تصحيح الأخطاء الأولية وتحسين الأداء."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة الخامسة: مرحلة النمذجة الأولية والاختبار وتتضمن: -"
        },
        {
            "type": "ul",
            "content": [
                "تطوير نماذج أولية واختبارها مع مجموعة محددة من المستخدمين أو العملاء.",
                "إجراء تعديلات استنادًا إلى التغذية الراجعة.",
                "اختبار التطبيق على محاكيات وأجهزة حقيقية بأنظمة تشغيل مختلفة."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة السادسة: مرحلة النشر والإطلاق وتتضمن:-"
        },
        {
            "type": "ul",
            "content": [
                "تسجيل التطبيق في المتاجر الرسمية (Google Play أو App Store).",
                "مراجعة سياسات المتاجر والامتثال لشروط النشر.",
                "إطلاق التطبيق رسميًا ومتابعة أداءه من خلال التحليلات."
            ]
        },
        {
            "type": "h4",
            "content": "المرحلة السابعة: مرحلة الصيانة والتحديث:"
        },
        {
            "type": "ul",
            "content": [
                "متابعة ملاحظات المستخدمين وإجراء التعديلات اللازمة.",
                "إصلاح الأخطاء وتحسين الأداء.",
                "توفير تحديثات جديدة تتضمن ميزات إضافية وتحسينات أمنية."
            ]
        },
        {
            "type": "h3",
            "content": "معايير تصميم تطبيقات الهواتف الذكية:"
        },
        {
            "type": "h4",
            "content": "أولاً: معايير قابلية الاستخدام وتتضمن:-"
        },
        {
            "type": "ul",
            "content": [
                "قدرة المستخدم على تنفيذ المهام بسهولة داخل التطبيق.",
                "سرعة ودقة إتمام المهام، مما يعكس إنتاجية المستخدم.",
                "توفير تجربة إيجابية تعزز رضا المستخدم عن التطبيق.",
                "تصميم بديهي يمكّن المستخدم من فهم التطبيق بسرعة.",
                "سهولة استعادة استخدام التطبيق بعد فترة من التوقف.",
                "القدرة على تحديث التطبيق وتصحيح الأخطاء تلقائيًا.",
                "توفير تصميم متوافق مع احتياجات المستخدمين وتوقعاتهم."
            ]
        },
        {
            "type": "h4",
            "content": "ثانيًا: معايير واجهة المستخدم وتتضمن: -"
        },
        {
            "type": "ul",
            "content": [
                "يجب أن يعكس تصميم التطبيق بيئة التشغيل المستخدمة مثل iOS أو Android.",
                "يجب أن تكون الأزرار وأماكن النقر مناسبة لتجنب التحديد غير المقصود.",
                "ضرورة استخدام ألوان متباينة، وأيقونات واضحة، وخطوط قابلة للقراءة.",
                "عرض الأوامر بطريقة تسهّل على المستخدم التنقل داخل التطبيق دون تشتيت.",
                "ضرورة المحافظة على الأسس التصميمية مثل التوازن، المحاذاة، التباين، ونقاط الاهتمام لضمان تجربة جمالية ووظيفية.",
                "استخدام الشبكات التصميمية لتنظيم المحتوى بطريقة واضحة وسهلة الفهم.",
                "استخدام المساحات البيضاء للتركيز على المحتوى وتقليل التشويش البصري.",
                "إزالة العناصر غير الضرورية لتجنب التصميم الفوضوي ولتعزيز سهولة التنقل."
            ]
        },
        {
            "type": "h4",
            "content": "ثالثًا: معايير تجربة المستخدم وتتضمن: -"
        },
        {
            "type": "ul",
            "content": [
                "يجب أن يكون التطبيق مصممًا لتلبية احتياجات المستخدم بسرعة وكفاءة.",
                "إمكانية تشغيل التطبيق على مختلف الأجهزة دون التأثير على وظائفه.",
                "واجهة بسيطة وسهلة الاستخدام دون الحاجة لتعلم مسبق.",
                "تقديم تجربة مخصصة للمستخدم وفقًا لاهتماماته وسلوكياته.",
                "تعزيز التفاعل وجذب انتباه المستخدم بطريقة سلسة.",
                "اختيار ألوان تحفّز المستخدم وتوفّر تجربة مريحة بصريًا.",
                "دعم الأوامر الصوتية لتسهيل استخدام التطبيق."
            ]
        }
    ],

    [
        {
            "type": "p",
            "content": "تتميز لغة Dart والتي طورتها شركة Google، بسهولة الاستخدام وبنيتها التي تجمع بين البساطة والقوة. تم إطلاقها لأول مرة في عام 2011 وتُستخدم Dart بشكل أساسي لتطوير تطبيقات الويب والهاتف وسطح المكتب."
        },
        {
            "type": "h2",
            "content": "مميزات لغة Dart:"
        },
        {
            "type": "h3",
            "content": "الأداء السريع: "
        },
        {
            "type": "p",
            "content": "تُترجم إلى كود أصلي (Native Code) ما يجعل التطبيقات أسرع مقارنة ببعض اللغات الأخرى."
        },
        {
            "type": "h3",
            "content": "التطوير متعدد المنصات: "
        },
        {
            "type": "p",
            "content": "يمكن استخدام Dart لتطوير تطبيقات تعمل على أنظمة تشغيل مختلفة مثل Android وiOS وWeb وWindows"
        },
        {
            "type": "h3",
            "content": "سهولة التعلم: "
        },
        {
            "type": "p",
            "content": "لغة Dart تشبه لغات مثل Java وJavaScript، مما يجعل تعلمها سهلاً. كما أنها توفر عديد من الأدوات المساعدة والموارد التعليمية."
        },
        {
            "type": "h3",
            "content": "مجتمع قوي ودعم متواصل: "
        },
        {
            "type": "p",
            "content": "مدعومة من Google، ولها مكتبة غنية بالأدوات والوثائق الرسمية."
        },
        {
            "type": "h2",
            "content": "خطوات إعداد بيئة العمل وتثبيت لغة Dart"
        },
        {
            "type": "ul",
            "content": [
                "تحميل وتثبيت برنامج visual studio code وتثبيته.",
                "تثبيت إضافة Dart داخل محرر الأكواد.",
                "تحميل أدوات تطوير التطبيقات للغة Dart على الحاسوب وحفظ المجلد داخل جهازك.",
                "دخول المجلد والبحث عن مجلد أخر يسمي bin ثم نسخ المسار الخاص بهذا المجلد.",
                "من قائمة start ابحث عن system variable environment ثم اضغط على environment variables انقر مرتين على path ثم قم بإضافة المسار داخل القائمة التي تظهر أمامك ثم قم بالضغط على Ok."
            ]
        },
        {
            "type": "h2",
            "content": "الدالةmain:"
        },
        {
            "type": "p",
            "content": "هي نقطة الانطلاق للكود في لغة Dart وهي دالة إلزامية لابد من وجودها لتشغيل البرنامج."
        },
        {
            "type": "img",
            "content": "/images/lesson/1/1.png"
        },
        {
            "type": "h2",
            "content": "طباعة نص داخل الدالة main:"
        },
        {
            "type": "img",
            "content": "/images/lesson/1/2.png"
        }
    ],
    [
        {
            "type": "p",
            "content": "أنواع البيانات (Data Types) هو مفهوم يُشير إلى نوع القيمة التي يُمكن تخزينها في الذاكرة."
        }, 
        {
            "type": "img",
            "content": "/images/lesson/2/1.jpg"
        },
        {
            "type": "h2",
            "content": "ويمكن تحديد أنواع البيانات في الأنواع التالية: -"
        },
        {
            "type": "ul",
            "content": ["الأعداد numbers: تُستخدم لتمثيل القيم العددية.", "النصوص strings: يتم تعريف النصوص باستخدام علامات الاقتباس ", "القيم المنطقية Boolean: تمثل القيم true أو false.", "القوائم List: تُستخدم لتخزين مجموعة من العناصر بترتيب رقمي، يتم تعريف القائمة باستخدام الأقواس المربعة [ ] كما أنه يمكن الوصول إلى عنصر معين باستخدام فهرس العنصر (Index)", "المجموعات Sets: تُستخدم لتخزين عناصر فريدة (بدون تكرار) بدون ترتيب معين، يتم تعريفها باستخدام الأقواس { }", "الخرائط Maps: تُستخدم لتخزين أزواج من القيم (مفتاح: قيمة)، يتم تعريفها باستخدام الأقواس {} مع أزواج مفتاح وقيمة مفصولة بـ :.", "القيمة الفارغة null: تستخدم للتعبير عن عدم تعيين قيمة لمتغير ما."]
        }
    ],
    [
        {
            "type": "h2",
            "content": "المتغيرات و الثوابت في لغة دارت"
        }, 
        {
            "type":"h3",
            "content": "المتغيرات (Variables): "
        },
        {
            "type": "p",
            "content": "المتغير هو حاوية تخزن قيمة يمكن تغييرها أثناء تشغيل البرنامج. "
        },
        {
            "type": "h3",
            "content": "الثوابت (Constant): "
        },
        {
            "type": "p",
            "content": "الثوابت تُستخدم لتخزين القيم التي لا تتغير أثناء تشغيل البرنامج."
        },
        {
            "type": "img",
            "content": "/images/lesson/3/1.png"
        },
        {
            "type": "p",
            "content": "تُستخدم المتغيرات والثوابت لتخزين القيم في البرنامج. في لغة Dart، ويمكن استخدام أنواع متعددة من المتغيرات والثوابت بناءً على طبيعة البيانات."
        },
        {
            "type": "p",
            "content": "ويتم تعريف المتغير باستخدام الكلمات المفتاحية مثل var أو النوع مباشرةً مثل int أوString، أما الثوابت يتم تعريفها باستخدام الكلمات المفتاحية final أو const"
        },
        {
            "type": "p",
            "content": "يتم الإعلان عن المتغير في لغة Dart بالطريقة التالية:"
        },
        {
            "type": "img",
            "content": "/images/lesson/3/2.png"
        },
        {
            "type": "p",
            "content": "كما يتم الإعلان عن الثابت في لغة Dart بالطريقة التالية:"
        },
        {
            "type": "img",
            "content": "/images/lesson/3/3.png"
        }
    ],
    [
        {
            "type": "h2",
            "content": "تتعدد أنواع المشغلات في لغة الDart وفيما يلي عرض لأنواع المشغلات: -"
        }, 
        {
            "type": "ul",
            "content": ["حسابية", "الزيادة والنقصان", "الإسناد", "المقارنات", "المنطقية"]
        },
        {
            "type": "p",
            "content": "تُستخدم المشغلات (Operators) لإجراء عمليات حسابية أو منطقية أو مقارنة على القيم والمتغيرات"
        },
        {
            "type": "h3",
            "content": "أولًا: العمليات الرياضية (Arithmetic Operations)"
        },
        {
            "type": "p",
            "content": "تُستخدم العمليات الرياضية لإجراء الحسابات على القيم الرقمية. توجد عدة أنواع من العمليات:"
        },
        {
            "type": "ul",
            "content": [
                "الجمع (+): إضافة رقمين أو أكثر.",
                "الطرح (-): طرح رقم من آخر.",
                "الضرب (*): ضرب رقمين.",
                "القسمة (/): قسمة رقم على آخر.",
                "قسمة الأعداد الصحيحة (~/): الحصول على ناتج القسمة كعدد صحيح.",
                "الباقي (%): حساب الباقي من القسمة"
            ]
        },
        {
            "type": "h3",
            "content": "ثانيًا: المقارنات (Comparison Operations)"
        },
        {
            "type": "p",
            "content": "عمليات المقارنة تستخدم لمقارنة القيم وإرجاع نتيجة منطقية (true أو false) ومن أنواعها:"
        },
        {
            "type": "ul",
            "content": [
                "(==): التساوي",
                "(!=): لا يساوي",
                "(<): أصغر من.",
                "(<=): أصغر من أو يساوي.",
                "(>): أكبر من.",
                "(>=): أكبر من أو يساوي."
            ]
        },
        {
            "type": "h3",
            "content": "ثالثًا: المشغلات المنطقية (Logical Operators)"
        },
        {
            "type": "p",
            "content": "وتستخدم لإجراء عمليات على القيم المنطقية (true وfalse) ومن أنواعها:"
        },
        {
            "type": "ul",
            "content": [
                "AND(&&): يتم إرجاع true فقط إذا كانت جميع الشروط صحيحة.",
                "OR(||): يتم إرجاع true إذا كان أحد الشروط صحيحة.",
                "NOT(!): يتم إرجاع عكس القيمة المنطقية.",
                "(<=): أصغر من أو يساوي."
            ]
        },
        {
            "type": "h3",
            "content": "رابعًا: مشغلات الإسناد (Assignment Operators)"
        },
        {
            "type": "p",
            "content": "وتستخدم لإسناد القيم إلى المتغيرات، ومن أنواعها:"
        },
        {
            "type": "ul",
            "content": [
                "(=): يتم من خلالها إسناد قيمة إلى متغير",
                "(+=): يتم من خلالها جمع القيمة ثم إسنادها"
            ]
        },
        {
            "type": "h3",
            "content": "خامسًا: مشغلات الزيادة والنقصان (Increment And Decrement Operators)"
        },
        {
            "type": "p",
            "content": "تستخدم لزيادة أو نقصان قيمة المتغير بمقدار 1."
        },
        {
            "type": "ul",
            "content": [
                "(++var): يتم الزيادة بعد استخدام القيمة.",
                "(++var): يتم الزيادة قبل استخدام القيمة.",
                "(--var): يتم النقصان بعد استخدام القيمة.",
                "(--var): يتم النقصان قبل استخدام القيمة."
            ]
        }
    ]
]
